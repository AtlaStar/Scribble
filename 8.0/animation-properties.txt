## Animation Properties

### `.animation_tick_speed(tickSpeed)`

**Returns**: The text element

|Name       |Datatype|Purpose                                                                                                       |
|-----------|--------|--------------------------------------------------------------------------------------------------------------|
|`tickSpeed`|real    |"Scaling factor" for animation ticks. A value of `2` doubles the speed, a value of `0.5` halves the speed etc.|

This function controls the animation speed of all animation effects. It, however, does **not** alter the speed of the typewriter.

&nbsp;

### `.animation_sync(sourceElement)`

**Returns**: The text element

|Name           |Datatype    |Purpose                                             |
|---------------|------------|----------------------------------------------------|
|`sourceElement`|text element|Source text element to copy animation state **from**|

Syncing a text element to another will overwrite the current values. Be careful how you sync your text elements! Animation state is updated when a text element is drawn so make sure to sync your text element once every frame/step before the source text element is drawn.

When copying the animation state, the animation time and the animation tick speed ([`.animation_tick_speed()`](scribble-methods?id=animation_tick_speedtickspeed)) will be copied. Animation appearance properties themselves won't be copied. To share animation behaviours between elements, please use templates ([`.template()`](scribble()-Methods?id=templatefunction-executeonlyonchange)).

&nbsp;

### `.animation_wave(size, frequency, speed)`

**Returns**: The text element

|Name       |Datatype|Purpose                                                                                             |
|-----------|--------|----------------------------------------------------------------------------------------------------|
|`size`     |real    |Maximum pixel offset of the animation                                                               |
|`frequency`|real    |Frequency of the animation. Larger values will create more horizontally frequent "humps" in the text|
|`speed`    |real    |Speed of the animation                                                                              |

This function controls behaviour of the `[wave]` effect across all uses in the text element.

&nbsp;

### `.animation_shake(size, speed)`

**Returns**: The text element

|Name       |Datatype|Purpose                                                          |
|-----------|--------|-----------------------------------------------------------------|
|`size`     |real    |Maximum pixel offset of the animation                            |
|`speed`    |real    |Speed of the animation. Larger numbers cause text to shake faster|

This function controls behaviour of the `[shake]` effect across all uses in the text element.

&nbsp;

### `.animation_rainbow(weight, speed)`

**Returns**: The text element

|Name    |Datatype|Purpose                                                                                                                   |
|--------|--------|--------------------------------------------------------------------------------------------------------------------------|
|`weight`|real    |Blend weight of the rainbow colouring. A value of 0 will not apply the effect, a value of 1 will blend with 100% weighting|
|`speed` |real    |Cycling speed of the animation. Larger numbers scroll faster                                                              |

This function controls behaviour of the `[rainbow]` effect across all uses in the text element.

&nbsp;

### `.animation_wobble(angle, frequency)`

**Returns**: The text element

|Name       |Datatype|Purpose                                                              |
|-----------|--------|---------------------------------------------------------------------|
|`angle`    |real    |Maximum angular offset of the animation                              |
|`frequency`|real    |Speed of the animation. Larger numbers cause text to oscillate faster|

This function controls behaviour of the `[wobble]` effect across all uses in the text element.

&nbsp;

### `.animation_pulse(scale, speed)`

**Returns**: The text element

|Name   |Datatype|Purpose                                                                        |
|-------|--------|-------------------------------------------------------------------------------|
|`scale`|real    |Maximum scale of the animation                                                 |
|`speed`|real    |Speed of the animation. Larger values will cause text to shrink and grow faster|

This function controls behaviour of the `[pulse]` effect across all uses in the text element.

&nbsp;

### `.animation_wheel(size, frequency, speed)`

**Returns**: The text element

|Name       |Datatype|Purpose                                                                  |
|-----------|--------|-------------------------------------------------------------------------|
|`size`     |real    |Maximum pixel offset of the animation                                    |
|`frequency`|real    |Frequency of the animation. Larger values will create more chaotic motion|
|`speed`    |real    |Speed of the animation                                                   |

This function controls behaviour of the `[wheel]` effect across all uses in the text element.

&nbsp;

### `.animation_cycle(speed, saturation, value)`

**Returns**: The text element

|Name        |Datatype|Purpose                                                                                                                                                                                                                                                             |
|------------|--------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|`speed`     |real    |Speed of the animation. Larger values will cause the colour to cycle faster                                                                                                                                                                                         |
|`saturation`|integer |Saturation of colours generated by the animation. Values from 0 to 255 (inclusive) are accepted, much like GM's [`make_color_hsv()`](https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FColour_And_Alpha%2Fmake_colour_hsv.htm)         |
|`value`     |integer |Value ("lightness") of colours generated by the animation. Values from 0 to 255 (inclusive) are accepted, much like GM's [`make_color_hsv()`](https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FColour_And_Alpha%2Fmake_colour_hsv.htm)|

This function controls behaviour of the `[cycle]` effect across all uses in the text element.

&nbsp;

### `.animation_jitter(minScale, maxScale, speed)`

**Returns**: The text element

|Name      |Datatype|Purpose                                                          |
|----------|--------|-----------------------------------------------------------------|
|`minScale`|real    |Minimum scale offset of the animation                            |
|`maxScale`|real    |Maximum scale offset of the animation                            |
|`speed`   |real    |Speed of the animation. Larger numbers cause text to shake faster|

This function controls behaviour of the `[jitter]` effect across all uses in the text element.

&nbsp;

### `.animation_blink(onDuration, offDuration, timeOffset)`

**Returns**: The text element

|Name         |Datatype|Purpose                                         |
|-------------|--------|------------------------------------------------|
|`onDuration` |real    |Number of ticks that blinking text is shown for |
|`offDuration`|real    |Number of ticks that blinking text is hidden for|
|`timeOffset` |real    |Time offset for calculating the blink state     |

This function controls behaviour of the `[blink]` effect across all uses in the text element.